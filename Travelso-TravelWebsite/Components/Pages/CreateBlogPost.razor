@page "/CreateBlogPost"
@using Blazored.TextEditor
@using Travelso_TravelWebsite.Services
@using Travelso_Website_Shared.DTOs
@using Travelso_Website_Shared.Entities
@using System.Security.Claims
@inject CountryService CountryService
@inject UserService UserService
@inject BlogPostService BlogPostService
@rendermode InteractiveServer

<AuthorizeView>
    <Authorized>
        <div class="BlogpostContainer">
            <div class="row row2" style="justify-content:center">
                <div class="col-md-10 createAPostDiv">

                    <div class="align-items-center mb-3">
                        <input type="text" class="form-control mr-2" @bind="Title" placeholder="Title for your blog post">
                        <br/>
                        <select class="form-control" @bind="SelectedCountry">
                            <option value="">Select a country</option>
                            @foreach (var country in Countries)
                            {
                                <option value="@country.CountryId">@country.Name</option>
                            }
                        </select>
                    </div>

                    <form>
                        <div class="form-group col-4">
                            <label for="imageUrl">Image URL:</label>
                            <input @bind="CountryImageURL" type="text" class="form-control" id="imageUrl" placeholder="Enter the URL of your cover image here">
                        </div>
                        <button type="submit" class="btn btn-primary btn-sm mt-2">Submit</button>
                    </form>

                    <hr />

                    <BlazoredTextEditor @ref="@QuillHtml">
                        <ToolbarContent>
                            <select class="ql-header">
                                <option selected=""></option>
                                <option value="1"></option>
                                <option value="2"></option>
                                <option value="3"></option>
                                <option value="4"></option>
                                <option value="5"></option>
                            </select>
                            <span class="ql-formats">
                                <button class="ql-bold"></button>
                                <button class="ql-italic"></button>
                                <button class="ql-underline"></button>
                                <button class="ql-strike"></button>
                            </span>
                            <span class="ql-formats">
                                <select class="ql-color"></select>
                                <select class="ql-background"></select>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-list" value="ordered"></button>
                                <button class="ql-list" value="bullet"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-link"></button>
                            </span>
                        </ToolbarContent>
                        <EditorContent>
                            <h1>Share your adventure with others!</h1>
                            <h3>your travel experiences, insider tips, and recommendations with fellow adventurers.</h3>

                        </EditorContent>
                    </BlazoredTextEditor>
                    <br />
                    <button class="btn btn-primary"
                            @onclick="GetHTML">
                        Review
                    </button>
                    @*             <button class="btn btn-primary"
                    @onclick="SetHTML">
                    Set HTML
                    </button> *@



                    <br />
                    <div>
                        <br />
                        @((MarkupString)QuillHTMLContent)

                    </div>
                    <br />

                    @*
                    <div class="d-flex align-items-center justify-content-center mb-3">
                    <img src="@UserProfileImageUrl" class="rounded-circle mr-3" style="width: 70px; height: 70px;" alt="BlogPostAuthorUser Profile Image" />
                    <span style="font-size: 20px;">@Username</span>
                    </div> *@

                    <hr />
                    <button class="btn btn-primary"
                            @onclick="(() => SaveBlogpost(context.User.Identity.Name))">
                        Save and publish
                    </button>
                </div>
            </div>

        </div>
    </Authorized>
</AuthorizeView>




@code {
    //username and userimage
    string Username = "";
    string UserProfileImageUrl = "https://plus.unsplash.com/premium_photo-1714591971607-ba1d91fc8386?q=80&w=1888&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D";

    //Properties for a new blogpost
    BlazoredTextEditor QuillHtml;
    string Title;
    string QuillHTMLContent;
    int SelectedCountry;
    string CountryImageURL;
    List<Country> Countries = new List<Country>();

    protected override async Task OnInitializedAsync()
    {
        var countries = await CountryService.GetAll();
        Countries = countries.ToList();



        base.OnInitialized();
    }


    public async void GetHTML()
    {
        QuillHTMLContent = await this.QuillHtml.GetHTML();

        StateHasChanged();
    }


    public async void SetHTML()
    {
        string QuillContent =
            @"<a href='http://BlazorHelpWebsite.com/'>" +
            "<img src='images/BlazorHelpWebsite.gif' /></a>";

        await this.QuillHtml.LoadHTMLContent(QuillContent);
        StateHasChanged();
    }


    private async Task SaveBlogpost(string? contextUser)
    {

        GetHTML();
        TravelsoUser travelsoUser = new();
        travelsoUser = await UserService.GetUserByMail(contextUser);

         var newpost = new BlogPost()
        {
             TravelsoUser = travelsoUser.UserId,
             ImageUrl = CountryImageURL,
             CountryId = SelectedCountry,
             PublishedDate = DateTime.Now,
             Title = Title,
             HtmlContent = QuillHTMLContent
        };

        //Save blogpost in the database
        await BlogPostService.Add(newpost);
    }

}