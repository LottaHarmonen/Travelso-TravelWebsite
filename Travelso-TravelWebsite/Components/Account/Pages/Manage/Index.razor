@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using Travelso_TravelWebsite.Data
@using Travelso_TravelWebsite.Services
@using Travelso_Website_Shared.Entities

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject UserService UserService
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Profile</PageTitle>

<h3>Profile</h3>
<StatusMessage />
<div class="row">
    <div class="col-md-3">
        <img src="@GetProfileImageUrl()" class="rounded-circle profile-image" alt="Profile Image" />
    </div>

</div>
<div class="row">
    <div>
        <h4>@TravelsoUser?.Email</h4>
    </div>
</div>

@code {
    private ClaimsPrincipal _user;
    private string? _userId;
    private string DefaultUserImageUrl = "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png";
    private TravelsoUser? TravelsoUser = new TravelsoUser();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _user = authState.User;
        _userId = _user.FindFirst(claim => claim.Type == ClaimTypes.NameIdentifier)?.Value;

        // Get the user with Id
        TravelsoUser = await UserService.GetUserWithId(_userId);

        await base.OnInitializedAsync();
    }

    private string GetProfileImageUrl()
    {
        return string.IsNullOrEmpty(TravelsoUser?.ProfileImage) ? DefaultUserImageUrl : TravelsoUser.ProfileImage;
    }
}
